name: Windows CI
on:
  pull_request:
jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Cache opam
        id: cache-opam
        uses: actions/cache@v4
        with:
          path: |
            C:\Program Files\opam\bin
            C:\Users\runneradmin\AppData\Local\opam
          key: ${{ runner.os }}-opam

      - name: Install opam
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          Invoke-Expression "& { $(Invoke-RestMethod https://raw.githubusercontent.com/kit-ty-kate/opam/windows-installer.debug/shell/install.ps1) } -OpamBinDir 'C:\Program Files\opam\bin' -NoSetPath -NoAdmin"
          "C:\Program Files\opam\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

#      - name: Install opam
#        run: |
#          curl -LO https://github.com/user-attachments/files/15792432/archive.zip
#          unzip archive.zip
#          New-Item -Force -Path "C:\Program Files\opam\bin" -Type Directory
#          Move-Item -Force -Path "opam-tmp.exe" -Destination "C:\Program Files\opam\bin\opam.exe"
#          "C:\Program Files\opam\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Init opam
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: opam init -yn .

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        #with:
        #  since_last_remote_commit: true

      - name: List all changed packages
        id: changed-packages
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          $output = @()
          Foreach ($file in ($env:ALL_CHANGED_FILES).Split(" ")) {
            switch -Regex ($file) {
              '^packages\\[^\\]*\\([^\\]*)\\.*' { $output += "$($matches[1])"; Break }
              default { Write-Host "$file skipped"; Break }
            }
          }
          $outputJson = $output | ConvertTo-Json
          "data<<@@@" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          $outputJson | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "@@@" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Install packages
        env:
          ALL_CHANGED_PACKAGES: ${{ steps.changed-packages.outputs.data }}
        run: |
          $pkgs = $env:ALL_CHANGED_PACKAGES | ConvertFrom-Json
          $failed = $false
          Foreach ($pkg in $pkgs) {
            opam install --confirm-level=unsafe-yes "$pkg"
            switch ($LASTEXITCODE) {
              0 { Break }
              20 { Write-Host "$pkg is not installable. Skip."; Break }
              31 { Write-Host "$pkg failed to build."; $failed = $true; Break }
              default { throw "Unexpected error $_" }
            }
          }
          if ($failed) {
            throw "build failed"
          }
